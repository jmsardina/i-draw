function setVariables(){
  paint = false;
  mouseCoordinates = new Array();
  var canvas = document.getElementById("drawing-canvas");
  var dataURL = canvas.toDataURL();
  undoArray = [dataURL];
  currentImage = document.createElement("img");
}

function listenOnMouse(){
  $("#drawing-canvas").on("mousedown", mouseDown);
  $("#drawing-canvas").on("mousemove", mouseMove);
  $("#drawing-canvas").on("mouseup", mouseUp);

  function mouseDown(e){
    paint = true;
    
    recordHistory();
    mouseCoordinates.push([e.offsetX, e.offsetY]);
  }

  function mouseMove(e){
    if(paint){
      mouseCoordinates.push([e.offsetX, e.offsetY]);
      draw(e);
    }
  }

  function mouseUp(e){
    paint = false;
    drawingContext.beginPath();
    drawingContext.arc(e.offsetX, e.offsetY, drawingContext.lineWidth/2, 0, Math.PI*2, true);
    drawingContext.closePath();
    drawingContext.fillStyle = drawingContext.strokeStyle
    drawingContext.fill();
    mouseCoordinates = new Array();
  }
}

function draw(e){
  if(paint){
    drawingContext.beginPath();
    drawingContext.lineJoin = "round";
    drawingContext.lineCap = "round";

    drawingContext.moveTo(mouseCoordinates[mouseCoordinates.length-2][0], mouseCoordinates[mouseCoordinates.length-2][1]);
    drawingContext.lineTo(mouseCoordinates[mouseCoordinates.length-1][0], mouseCoordinates[mouseCoordinates.length-1][1]);
    mouseCoordinates.splice(-2, 1);
    drawingContext.stroke();
  }
}

function recordHistory(){
  var canvas = document.getElementById("drawing-canvas");
  var dataURL = canvas.toDataURL();
  undoArray.push(dataURL);

  if(undoArray.length >= 4){
    undoArray.splice(0, 1);
  }

  redoArray = new Array();
}

function listenOnCanvasClearing(){
  $("#start-over").on("click", clearCanvas);
  $(document).on("click", "#remove-image", completeDrawing);
  $("#eraser").on("click", erasing);
  $("#js-undo").on("click", undo);
  $("#js-redo").on("click", redo);

  function erasing(){
    drawingContext.globalCompositeOperation = "destination-out";
    $("#drawing-canvas").attr("class", "erasing");
  }
 
  function clearCanvas(){
    if(confirm("We're about to erase your picture!")){
      drawingContext.clearRect(0, 0, canvas.width, canvas.height);
    }
  }

  function completeDrawing(){
    if(confirm("Are you sure you're done?")){
      imageHolderContext.clearRect(0, 0, canvas.width, canvas.height);
      if($("#profile").hasClass("color")){
        drawingContext.drawImage(currentImage, canvas.width/60+85, 10, canvas.width/1.3, canvas.height-18);
      }
    }
  }

  function undo(){
    if((redoArray.length === 0) & (undoArray.length >= 1)){
      var canvas = document.getElementById("canvas");
      var dataURL = canvas.toDataURL();
      redoArray.unshift(dataURL);
    }
    if(undoArray.length >= 1){
      drawingContext.clearRect(0, 0, $("#drawing-canvas").width(), $("#drawing-canvas").height());
      var image = document.createElement("img");
   
      redoArray.unshift(undoArray.pop());
      image.setAttribute("src", redoArray[0]);
      drawingContext.drawImage(image, 0, 0);
    }
  }

  function redo(){
    if(redoArray.length >= 1){
      drawingContext.clearRect(0, 0, canvas.width, canvas.height);
      var image = document.createElement("img");

      undoArray.push(redoArray.shift())
      image.setAttribute("src", undoArray[undoArray.length-1]);
      drawingContext.drawImage(image, 0, 0);
    }
  }
}